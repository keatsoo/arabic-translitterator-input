name: CMake

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    
    - name: Install build dependencies
      run: sudo apt-get update && sudo apt-get install -y build-essential

    - name: Build and install Gtkmm 4.0
      run: |
        sudo apt-get update && \
        sudo apt-get install -y libglibmm-2.4-dev libgtk-3-dev libgtkmm-3.0-dev && \
        wget https://download.gnome.org/sources/gtkmm/4.0/gtkmm-4.2.0.tar.xz && \
        tar -xf gtkmm-4.2.0.tar.xz && \
        cd gtkmm-4.2.0 && \
        meson _build --prefix=/usr && \
        cd _build && \
        make && \
        sudo make install

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}
